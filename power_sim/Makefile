# VHHFLAGS is used for preprocessing the VHDL source
# For each simulation the following need to be defined
# PACKET_RATE - RI_SF_8 etc...
# SERIAL_CLK_NS - 38.5 etc...
# SIMULATION_TIME - "65686000 ns" etc...
# SEND_PACKET - 0 or 1 - Send packet, or just simulate idle time
# 	only required once per SIMULATION time

SIMULATION_TIME := "10 us"

# transmitter_tb.ncd transmitter_tb.pcf are generated by par
power_report:	xpower.saif \
		Xilinx/transmitter_tb.ncd \
		Xilinx/transmitter_tb.pcf
	xpwr -v Xilinx/transmitter_tb.ncd Xilinx/transmitter_tb.pcf \
		-s xpower.saif -o power_report

xpower.saif: isim-saif.cmd transmitter_stim_tb
	./transmitter_stim_tb -tclbatch isim-saif.cmd

transmitter_stim_tb: 	transmitter_stim_tb_pp.vhd \
			Xilinx/transmitter_gate_tb.vhd \
			Xilinx/transmitter_tb.prj
	fuse -incremental -o transmitter_stim_tb \
		-prj Xilinx/transmitter_tb.prj \
		work.transmitter_stim_tb

isim-saif.cmd:
	echo onerror {resume} > $@
	echo wave add / >> $@
	echo saif open -scope transmitter_tb -allnets >> $@
	echo run $(SIMULATION_TIME)";" >> $@
	echo saif close >> $@
	echo quit >> $@

# Only once (STIMULUS=0)
#transmitter_gate_tb:	transmitter_tb.vhd \
#			modulator.vhd \
#			fifo_interface.vhd \
#			parallel_to_serial.vhd \
#			fifo_tx.xco
#	netgen

# Preprocessing
%_pp.vhd: ../testbench/%.vhd
	cpp $(VHHFLAGS) -DVHDL -D_QUOTE=\" -x assembler-with-cpp \
		-P -I ../ "$<" -o "$@"

clean:
	rm -f transmitter_stim_tb_pp.vhd
	rm -f transmitter_stim_tb
	rm -f xpower.saif
	rm -f power_report.pwr
	rm -f transmitter_stim_tb
	rm -f fuse*
	rm -rf isim*
	rm -rf _xmsgs
