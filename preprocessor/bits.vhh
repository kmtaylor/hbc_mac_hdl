/* Copyright (C) 2016 Kim Taylor
 *
 * This file is part of hbc_mac.
 *
 * hbc_mac is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Foobar is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with hbc_mac.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <boost/preprocessor/tuple/elem.hpp>
#include <boost/preprocessor/control/if.hpp>
#include <boost/preprocessor/comparison/less.hpp>
#include <boost/preprocessor/comparison/equal.hpp>

#define LT(n) n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n
#define LOG_TUP ( \
    0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, LT(5), LT(6), LT(6) )

/* Determine the number of bits required to count to n (inclusive) */
#define BITS_FOR_VAL(n) \
    BOOST_PP_IF(				\
	BOOST_PP_LESS(n, 64),			\
	BOOST_PP_TUPLE_ELEM(64, n, LOG_TUP),	\
	BOOST_PP_IF(				\
	    BOOST_PP_LESS(n, 128), 7,		\
	    BOOST_PP_IF(			\
		BOOST_PP_EQUAL(n, 256), 9, 8)))
